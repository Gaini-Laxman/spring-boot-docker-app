############
Docker
############

1) What is Docker ?

2) Why we need to go for Docker 

3) Docker Architecture

4) Docker Setup

5) Docker Commands



-> Docker is a containerization software

-> Docker is used to simplify our application deployment process

-> Using Docker we can run our application in any platform.


1) Dockerfile

2) Docker Image

3) Docker Hub (Docker registry)

4) Docker Container



=> Dockerfile contains instructions to build docker image

=> Using Dockerfile we can create Docker Image

=> Docker Image contains application code + required dependencies

=> Docker Images we can store in Docker Hub (Docker Registry)

Note: In realtime , we will use AWS ECR to store docker images

	(ECR -> Elastic Container Registry)

=> Docker Images are used to create Docker Containers

=> Our application will execute inside Docker Container.


Note: To work with Docker we need to install Docker Software (Docker Engine)

==============
Docker Setup
===============

## install docker
$ curl -fsSL get.docker.com | /bin/bash

## Verify docker installation
$ sudo docker -v


## pull docker image from docker hub
$ sudo docker pull ashokit/spring-boot-rest-api

## Display docker image we have in our machine
$ sudo docker images


## Run Docker Image
$ sudo docker run -p 9090:9090  ashokit/spring-boot-rest-api


Note: Enable 9090 port number in security group

## Access application using URL like below

	http://public-ip:9090/welcome/Ashok

==================================================
Assignment : Dockerize Spring Boot Application
===================================================

######  Spring Boot with Docker : https://youtu.be/iGz0cFwt5vI








# display docker images available in our machine
sudo docker images

# Remove docker image
sudo docker rmi <image-name/image-id>

# Display Running Docker containers
sudo docker ps

# Display stopped docker containers
sudo docker ps -a

# Remove container
sudo docker rm <container-id>

# Download docker image
sudo docker pull <image-name>


# It is used to clean up docker content
sudo docker system prune -a


# Run docker container in detached mode
sudo docker run -d -p 9090:9090 ashokit/spring-boot-rest-api











=============
Dockerfile
=============

-> Dockerfile contains set of instructions to build docker image

-> In Dockerfile we will use DSL keywords


FROM
MAINTAINER
COPY
ADD
WORKDIR
RUN
CMD
EXPOSE
ENTRYPOINT
VOLUME
ARG


=> FROM is used to specify base image to create our image

	FROM  open-jdk:11

	FROM python:3.3

	FROM tomcat:9.5

	FROM node:15.1


=> MAINTAINER is used to specify Dockerfile Author

	MAINTAINER  Ashok<ashok@gmail.com>


=> COPY is used to copy the files from source to destination

	COPY  target/sb-api.jar /usr/app/sb-api.jar

	COPY   target/app.war  /usr/tomcat/webapps/app.war


=> ADD is used to copy the files from source to destination

	ADD   <URL>  /usr/tomcat/webapps/app.war


=> RUN is used to execute instructions while creating docker image


	RUN   apt install git
	RUN   apt install maven
	RUN   git clone <repo>

	
=> CMD is used to execute instructions while container creation

	CMD  java  -jar  jarfile


=> WORKDIR is used to specify working directory


=> ENTRYPOINT is used to execute instructions while creating container


=> Create Dockerfile with below content 

	file name : Dockerfile

FROM ubuntu

RUN echo ' hi'
RUN echo 'hello'
CMD echo 'how are you'

=> Create Docker image using above docker file

$ sudo docker build -t first-image .

$ sudo docker build -t first-image -f <docker-file>

























